on_startup={
	if = {#sets up Imperium eoc variables
		limit = { NOT = { has_global_flag = imperium_setup } }
		set_global_flag = imperium_setup
		set_hre_religion_treaty = no
		3475={
			add_canal = askellon_portal
		}
		3474={
			add_canal = grail_stars_portal
		}
		3473={
			add_canal = nostramo_portal
		}
		3472={
			add_canal = mandragora_portal
		}
		3471={
			add_canal = yarokin_portal
		}
		3470={
			add_canal = caradryad_portal
		}
		3548={
			add_canal = corribra_portal
		}
		3549={
			add_canal = grendl_stars_portal
		}
		4080={
			add_canal = jericho_warpgate
		}
		3334={
			add_cardinal = yes
		}
		XXA={#Imperium set up
			set_estate_privilege = estate_eunuchs_palace_bureaucracy_privilege
			set_estate_privilege = estate_eunuchs_delegate_provincial_administration_privilege
			set_estate_privilege = estate_eunuchs_imperial_council_privilege
			set_estate_privilege = estate_nobles_land_rights
			set_estate_privilege = estate_burghers_economical_boost
			set_estate_privilege = estate_burghers_private_trade_fleets
			set_estate_privilege = estate_inquisition_independent_action
			set_estate_privilege = estate_inquisition_right_exterminatus
			set_estate_privilege = estate_mechanicus_treaty_olympus
			set_estate_privilege = estate_church_adeptus_ministorum
			set_estate_privilege = estate_church_militant_apostolic
			set_estate_privilege = estate_church_land_rights
			add_estate_loyalty = {
				estate = estate_eunuchs
				loyalty = -15
			}
			hire_advisor = {
				type = irthuhaemotalion
				name = "Irthu Haemotalion"
				skill = 1
				culture = imperial_culture
			}
			hire_advisor = {
				type = mereldapereth
				name = "Merelda Pereth"
				skill = 1
				culture = imperial_culture
			}
			hire_advisor = {
				type = avelizadrachmar
				name = "Aveliza Drachmar"
				skill = 1
				culture = imperial_culture
			}
			add_corruption = 50
			
		}
		1 = {
			add_province_modifier = { 
				name = terra_starting_modifier
				duration = -1  
			}
		}
		3281 = {
			add_province_modifier = { 
				name = terra_starting_modifier
				duration = -1  
			}
		}
		3332 = {
			add_province_modifier = { 
				name = terra_starting_modifier
				duration = -1  
			}
			spawn_rebels = {
				type = heretic_rebels
				size = 1.5
				should_take_capital = yes 
			}
			change_controller = REB
		}
		3333 = {
			add_province_modifier = { 
				name = terra_starting_modifier
				duration = -1  
			}
			spawn_rebels = {
				type = heretic_rebels
				size = 1.5
				should_take_capital = yes 
			}
			change_controller = REB
		}
		3334 = {
			add_province_modifier = { 
				name = terra_starting_modifier
				duration = -1  
			}
		}
		3335 = {
			add_province_modifier = { 
				name = terra_starting_modifier
				duration = -1  
			}
		}
		3336 = {
			add_province_modifier = { 
				name = terra_starting_modifier
				duration = -1  
			}
		}
		3337 = {
			add_province_modifier = { 
				name = terra_starting_modifier
				duration = -1  
			}
		}
		3338 = {
			add_province_modifier = { 
				name = terra_starting_modifier
				duration = -1  
			}
			spawn_rebels = {
				type = heretic_rebels
				size = 2
				should_take_capital = yes 
			}
			change_controller = REB
		}
		XTE={ #Mechanicus set-up
			save_global_event_target_as = adeptus_mechanicus_tag 
			if = {
				limit={
					has_100_forge_worlds_trigger = yes
				}
				set_country_flag = XXB_has_100_forge_worlds
			}
			else={
				clr_country_flag = XXB_has_100_forge_worlds
			}
			if = {
				limit={
					has_75_forge_worlds_trigger = yes
				}
				set_country_flag = XXB_has_75_forge_worlds
			}
			else={
				clr_country_flag = XXB_has_75_forge_worlds
			}
			if = {
				limit={
					has_50_forge_worlds_trigger = yes
				}
				set_country_flag = XXB_has_50_forge_worlds
			}
			else={
				clr_country_flag = XXB_has_50_forge_worlds
			}
			if = {
				limit={
					has_25_forge_worlds_trigger = yes
				}
				set_country_flag = XXB_has_25_forge_worlds
			}
			else={
				clr_country_flag = XXB_has_25_forge_worlds
			}
			if = {
				limit={
					has_10_forge_worlds_trigger = yes
				}
				set_country_flag = XXB_has_10_forge_worlds
			}
			else={
				clr_country_flag = XXB_has_10_forge_worlds
			}
			if = {
				limit={
					NOT={has_5_forge_worlds_trigger = yes}
				}
				set_country_flag = XXB_has_less_then_5_forge_worlds
			}
			else={
				clr_country_flag = XXB_has_less_then_5_forge_worlds
			}
		}
		2={
			set_variable = {
				value = 1
				which = MechanicusNbForgeWorlds
			}
			every_country={
				limit={
					is_subject_of_type = integrated_forgeworld
				}
				2={
					change_variable = {
						which = MechanicusNbForgeWorlds
						value = 1
					}
				}
			}
			every_country={
				limit={
					is_subject_of_type = integrated_major_forgeworld
				}
				2={
					change_variable = {
						which = MechanicusNbForgeWorlds
						value = 1
					}
				}
			}
		}
		AAM={ #Ecclesicarchy set-up
			save_global_event_target_as = adeptus_ministorum_tag 
		}
		3334={
			set_variable = {
				value = 0
				which = MinistorumNbShrine
			}
			every_country={
				limit={
					is_subject_of_type = shrine_world_subject_type
				}
				3334={
					change_variable = {
						which = MinistorumNbShrine
						value = 1
					}
				}
			}
			set_variable = {
				value = 0
				which = MinistorumNbSistersOfBattle
			}
			every_country={
				limit={
					is_subject_of_type = order_adepta_sororitas_subject_type
				}
				3334={
					change_variable = {
						which = MinistorumNbSistersOfBattle
						value = 1
					}
				}
			}
		}
		AAQ={ #Inquisition set-up
			save_global_event_target_as = inquisition_tag 
		}
		3942={
			set_variable = {
				value = 0
				which = InquisitionNbDeathwatch
			}
			every_country={
				limit={
					is_subject_of_type = deathwatch_subject_type
				}
				3942={
					change_variable = {
						which = InquisitionNbDeathwatch
						value = 1
					}
				}
			}
		}
		
		1 = {
			set_variable = {
				value = 97
				which = ImperiumGoldenThroneFailing
			}
			set_variable = {
				which = ImperiumGoldenThroneFailingChange
				value = -1
			}
			
			set_variable = {
				value = 0
				which = ImperiumNbAstartes
			}
			every_country={
				limit={
					is_subject_of_type = astartes_subject_type
				}
				1={
					change_variable = {
						which = ImperiumNbAstartes
						value = 1
					}
				}
			}
			set_variable = {
				value = 0
				which = ImperiumNbIndAstartes
			}
			every_country={
				limit={
					is_subject_of_type = autonomus_astartes_subject_type
				}
				1={
					change_variable = {
						which = ImperiumNbIndAstartes
						value = 1
					}
				}
			}
			set_variable = {
				value = 0
				which = ImperiumNbTotalWorlds
			}
			set_variable = {
				value = 0
				which = ImperiumNbIntgratedWorlds
			}
			every_country={
				limit={
					is_subject_of_type = integrated_world_subject_type
				}
				1={
					change_variable = {
						which = ImperiumNbIntgratedWorlds
						value = 1
					}
					change_variable = {
						which = ImperiumNbTotalWorlds
						value = 1
					}
				}
			}
			set_variable = {
				value = 0
				which = ImperiumNbWorlds
			}
			every_country={
				limit={
					is_subject_of_type = imperial_world_subject_type
				}
				1={
					change_variable = {
						which = ImperiumNbWorlds
						value = 1
					}
					change_variable = {
						which = ImperiumNbTotalWorlds
						value = 1
					}
				}
			}
			set_variable = {
				value = 0
				which = ImperiumNbNominalWorlds
			}
			every_country={
				limit={
					is_subject_of_type = nominal_imperial_world_subject_type
				}
				1={
					change_variable = {
						which = ImperiumNbNominalWorlds
						value = 1
					}
					change_variable = {
						which = ImperiumNbTotalWorlds
						value = 1
					}
				}
			}
			set_variable = {
				value = 0
				which = ImperiumNbSectors
			}
			every_country={
				limit={
					is_subject_of_type = imperial_sector_subject
				}
				1={
					change_variable = {
						which = ImperiumNbSectors
						value = 1
					}
				}
			}
		}
	}
}
on_yearly_pulse_2 = {
	events={
		imperium_events.4
	}
}
on_annexed = {
	if = {
		limit = {
			FROM = { 
				is_subject_of_type = nominal_imperial_world_subject_type
			}
		}
		1={
			change_variable = {
				which = ImperiumNbNominalWorlds
				value = -1
			}
			change_variable = {
				which = ImperiumNbTotalWorlds
				value = -1
			}
		}
	}
	if = {
		limit = {
			FROM = { 
				is_subject_of_type = imperial_world_subject_type
			}
		}
		1={
			change_variable = {
				which = ImperiumNbWorlds
				value = -1
			}
			change_variable = {
				which = ImperiumNbTotalWorlds
				value = -1
			}
		}
	}
	if = {
		limit = {
			FROM = { 
				is_subject_of_type = integrated_world_subject_type
			}
		}
		1={
			change_variable = {
				which = ImperiumNbIntgratedWorlds
				value = -1
			}
			change_variable = {
				which = ImperiumNbTotalWorlds
				value = -1
			}
		}
	}
	if = {
		limit = {
			FROM = { 
				is_subject_of_type = astartes_subject_type
			}
		}
		1={
			change_variable = {
				which = ImperiumNbAstartes
				value = -1
			}
		}
	}
	if = {
		limit = {
			FROM = { 
				is_subject_of_type = autonomus_astartes_subject_type
			}
		}
		1={
			change_variable = {
				which = ImperiumNbIndAstartes
				value = -1
			}
		}
	}
	if = {
		limit = {
			ROOT = { 
				OR={
					is_subject_of_type = integrated_forgeworld
					is_subject_of_type = integrated_major_forgeworld
				}
			}
		}
		2={
			change_variable = {
				which = MechanicusNbForgeWorlds
				value = -1
			}
		}
	}
	if = {
		limit = {
			ROOT = { 
				is_subject_of_type = imperial_sector_subject
			}
		}
		1={
			change_variable = {
				which = ImperiumNbSectors
				value = -1
			}
		}
	}
	if = {
		limit = {
			ROOT = { 
				is_subject_of_type = deathwatch_subject_type
			}
		}
		3942={
			change_variable = {
				which = InquisitionNbDeathwatch
				value = -1
			}
		}
	}
}
# ROOT = New vassal, FROM = Overlord
on_create_vassal = {
	if = {
		limit = {
			ROOT = { 
				is_subject_of_type = nominal_imperial_world_subject_type
			}
		}
		1={
			change_variable = {
				which = ImperiumNbNominalWorlds
				value = 1
			}
			change_variable = {
				which = ImperiumNbTotalWorlds
				value = 1
			}
		}
	}
	if = {
		limit = {
			ROOT = { 
				is_subject_of_type = imperial_world_subject_type
			}
		}
		1={
			change_variable = {
				which = ImperiumNbWorlds
				value = 1
			}
			change_variable = {
				which = ImperiumNbTotalWorlds
				value = 1
			}
		}
	}
	if = {
		limit = {
			ROOT = { 
				is_subject_of_type = integrated_world_subject_type
			}
		}
		1={
			change_variable = {
				which = ImperiumNbIntgratedWorlds
				value = 1
			}
			change_variable = {
				which = ImperiumNbTotalWorlds
				value = 1
			}
		}
	}
	if = {
		limit = {
			ROOT = { 
				is_subject_of_type = astartes_subject_type
			}
		}
		1={
			change_variable = {
				which = ImperiumNbAstartes
				value = 1
			}
		}
	}
	if = {
		limit = {
			ROOT = { 
				is_subject_of_type = autonomus_astartes_subject_type
			}
		}
		1={
			change_variable = {
				which = ImperiumNbIndAstartes
				value = 1
			}
		}
	}
	if = {
		limit = {
			ROOT = { 
				is_subject_of_type = imperial_sector_subject
			}
		}
		1={
			change_variable = {
				which = ImperiumNbSectors
				value = 1
			}
		}
	}
	if = {
		limit = {
			ROOT = { 
				OR={
					is_subject_of_type = integrated_forgeworld
					is_subject_of_type = integrated_major_forgeworld
				}
			}
			FROM={
				tag = event_target:adeptus_mechanicus_tag
			}
		}
		2={
			change_variable = {
				which = MechanicusNbForgeWorlds
				value = 1
			}
		}
	}
}
on_province_owner_change = { #
	if = {
		limit = {
			has_saved_global_event_target = adeptus_mechanicus_tag
			FROM={
				tag = event_target:adeptus_mechanicus_tag
				is_subject_of = event_target:adeptus_mechanicus_tag
			}
			OR={
				has_province_modifier = minor_forge_world_mod
				has_province_modifier = forge_world_1_mod
				has_province_modifier = forge_world_2_mod
				has_province_modifier = forge_world_3_mod
				has_province_modifier = forge_world_4_mod
				has_province_modifier = minor_forge_world_area_mod
				has_province_modifier = forge_world_1_area_mod
				has_province_modifier = forge_world_2_area_mod
				has_province_modifier = forge_world_3_area_mod
				has_province_modifier = forge_world_4_area_mod
			}
		}
		2={
			change_variable = {
				which = MechanicusNbForgeWorlds
				value = -1
			}
		}
	}
	if={
		limit={
			has_saved_global_event_target = adeptus_mechanicus_tag
			owner={
				OR={
					tag = event_target:adeptus_mechanicus_tag
					is_subject_of = event_target:adeptus_mechanicus_tag
				}
			}
			OR={
				has_province_modifier = minor_forge_world_mod
				has_province_modifier = forge_world_1_mod
				has_province_modifier = forge_world_2_mod
				has_province_modifier = forge_world_3_mod
				has_province_modifier = forge_world_4_mod
				has_province_modifier = minor_forge_world_area_mod
				has_province_modifier = forge_world_1_area_mod
				has_province_modifier = forge_world_2_area_mod
				has_province_modifier = forge_world_3_area_mod
				has_province_modifier = forge_world_4_area_mod
			}
		}
		2={
			change_variable = {
				which = MechanicusNbForgeWorlds
				value = 1
			}
		}
	}
	if = {
		limit = {
			has_saved_global_event_target = adeptus_mechanicus_tag
			OR={
				FROM={
					tag = event_target:adeptus_mechanicus_tag
					is_subject_of = event_target:adeptus_mechanicus_tag
				}
				owner={
					tag = event_target:adeptus_mechanicus_tag
					is_subject_of = event_target:adeptus_mechanicus_tag
				}
			}	
		}
		event_target:adeptus_mechanicus_tag={
			if = {
				limit={
					has_100_forge_worlds_trigger = yes
				}
				set_country_flag = XXB_has_100_forge_worlds
			}
			else={
				clr_country_flag = XXB_has_100_forge_worlds
			}
			if = {
				limit={
					has_75_forge_worlds_trigger = yes
				}
				set_country_flag = XXB_has_75_forge_worlds
			}
			else={
				clr_country_flag = XXB_has_75_forge_worlds
			}
			if = {
				limit={
					has_50_forge_worlds_trigger = yes
				}
				set_country_flag = XXB_has_50_forge_worlds
			}
			else={
				clr_country_flag = XXB_has_50_forge_worlds
			}
			if = {
				limit={
					has_25_forge_worlds_trigger = yes
				}
				set_country_flag = XXB_has_25_forge_worlds
			}
			else={
				clr_country_flag = XXB_has_25_forge_worlds
			}
			if = {
				limit={
					has_10_forge_worlds_trigger = yes
				}
				set_country_flag = XXB_has_10_forge_worlds
			}
			else={
				clr_country_flag = XXB_has_10_forge_worlds
			}
			if = {
				limit={
					NOT={has_5_forge_worlds_trigger = yes}
				}
				set_country_flag = XXB_has_less_then_5_forge_worlds
			}
			else={
				clr_country_flag = XXB_has_less_then_5_forge_worlds
			}
		}
	}
}	