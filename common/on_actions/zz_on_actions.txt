on_startup={
	if = {#sets up Imperium eoc variables
		limit = { NOT = { has_global_flag = imperium_setup } }
		set_global_flag = imperium_setup
		XXA={
			set_estate_privilege = estate_eunuchs_palace_bureaucracy_privilege
			set_estate_privilege = estate_eunuchs_delegate_provincial_administration_privilege
			set_estate_privilege = estate_eunuchs_imperial_council_privilege
			hire_advisor = {
				type = irthuhaemotalion
				name = "Irthu Haemotalion"
				skill = 1
				culture = imperial_culture
			}
			hire_advisor = {
				type = mereldapereth
				name = "Merelda Pereth"
				skill = 1
				culture = imperial_culture
			}
			hire_advisor = {
				type = avelizadrachmar
				name = "Aveliza Drachmar"
				skill = 1
				culture = imperial_culture
			}
			add_corruption = 30
			set_estate_privilege = estate_church_land_rights
			set_estate_privilege = estate_nobles_land_rights
		}
		1 = {
			add_province_modifier = { 
				name = terra_starting_modifier
				duration = -1  
			}
		}
		3281 = {
			add_province_modifier = { 
				name = terra_starting_modifier
				duration = -1  
			}
		}
		3332 = {
			add_province_modifier = { 
				name = terra_starting_modifier
				duration = -1  
			}
			spawn_rebels = {
				type = heretic_rebels
				size = 2
				should_take_capital = yes 
			}
			change_controller = REB
		}
		3333 = {
			add_province_modifier = { 
				name = terra_starting_modifier
				duration = -1  
			}
			spawn_rebels = {
				type = heretic_rebels
				size = 2
				should_take_capital = yes 
			}
			change_controller = REB
		}
		3334 = {
			add_province_modifier = { 
				name = terra_starting_modifier
				duration = -1  
			}
		}
		3335 = {
			add_province_modifier = { 
				name = terra_starting_modifier
				duration = -1  
			}
		}
		3336 = {
			add_province_modifier = { 
				name = terra_starting_modifier
				duration = -1  
			}
		}
		3337 = {
			add_province_modifier = { 
				name = terra_starting_modifier
				duration = -1  
			}
		}
		3338 = {
			add_province_modifier = { 
				name = terra_starting_modifier
				duration = -1  
			}
			spawn_rebels = {
				type = heretic_rebels
				size = 3
				should_take_capital = yes 
			}
			change_controller = REB
		}
		XXB={ 
			save_global_event_target_as = adeptus_mechanicus_tag 
			if = {
				limit={
					has_100_forge_worlds_trigger = yes
				}
				set_country_flag = XXB_has_100_forge_worlds
			}
			else={
				clr_country_flag = XXB_has_100_forge_worlds
			}
			if = {
				limit={
					has_75_forge_worlds_trigger = yes
				}
				set_country_flag = XXB_has_75_forge_worlds
			}
			else={
				clr_country_flag = XXB_has_75_forge_worlds
			}
			if = {
				limit={
					has_50_forge_worlds_trigger = yes
				}
				set_country_flag = XXB_has_50_forge_worlds
			}
			else={
				clr_country_flag = XXB_has_50_forge_worlds
			}
			if = {
				limit={
					has_25_forge_worlds_trigger = yes
				}
				set_country_flag = XXB_has_25_forge_worlds
			}
			else={
				clr_country_flag = XXB_has_25_forge_worlds
			}
			if = {
				limit={
					has_10_forge_worlds_trigger = yes
				}
				set_country_flag = XXB_has_10_forge_worlds
			}
			else={
				clr_country_flag = XXB_has_10_forge_worlds
			}
			if = {
				limit={
					NOT={has_5_forge_worlds_trigger = yes}
				}
				set_country_flag = XXB_has_less_then_5_forge_worlds
			}
			else={
				clr_country_flag = XXB_has_less_then_5_forge_worlds
			}
		}
		1 = {
			set_variable = {
				value = 97
				which = ImperiumGoldenThroneFailing
			}
			set_variable = {
				value = -1
				which = ImperiumGoldenThroneFailingChange
			}
			
			set_variable = {
				value = 0
				which = ImperiumNbAstartes
			}
			every_country={
				limit={
					is_subject_of_type = astartes_subject_type
				}
				1={
					change_variable = {
						which = ImperiumNbAstartes
						value = 1
					}
				}
			}
			set_variable = {
				value = 0
				which = ImperiumNbIndAstartes
			}
			every_country={
				limit={
					is_subject_of_type = autonomus_astartes_subject_type
				}
				1={
					change_variable = {
						which = ImperiumNbIndAstartes
						value = 1
					}
				}
			}
			set_variable = {
				value = 0
				which = ImperiumNbTotalWorlds
			}
			set_variable = {
				value = 0
				which = ImperiumNbIntgratedWorlds
			}
			every_country={
				limit={
					is_subject_of_type = integrated_world_subject_type
				}
				1={
					change_variable = {
						which = ImperiumNbIntgratedWorlds
						value = 1
					}
					change_variable = {
						which = ImperiumNbTotalWorlds
						value = 1
					}
				}
			}
			set_variable = {
				value = 0
				which = ImperiumNbWorlds
			}
			every_country={
				limit={
					is_subject_of_type = imperial_world_subject_type
				}
				1={
					change_variable = {
						which = ImperiumNbWorlds
						value = 1
					}
					change_variable = {
						which = ImperiumNbTotalWorlds
						value = 1
					}
				}
			}
			set_variable = {
				value = 0
				which = ImperiumNbNominalWorlds
			}
			every_country={
				limit={
					is_subject_of_type = nominal_imperial_world_subject_type
				}
				1={
					change_variable = {
						which = ImperiumNbNominalWorlds
						value = 1
					}
					change_variable = {
						which = ImperiumNbTotalWorlds
						value = 1
					}
				}
			}
		}
	}
}
on_yearly_pulse = {
	events={
		imperium_events.4
	}
}
on_annexed = {
	if = {
		limit = {
			FROM = { 
				is_subject_of_type = nominal_imperial_world_subject_type
			}
		}
		1={
			change_variable = {
				which = ImperiumNbNominalWorlds
				value = -1
			}
			change_variable = {
				which = ImperiumNbTotalWorlds
				value = -1
			}
		}
	}
	if = {
		limit = {
			FROM = { 
				is_subject_of_type = imperial_world_subject_type
			}
		}
		1={
			change_variable = {
				which = ImperiumNbWorlds
				value = -1
			}
			change_variable = {
				which = ImperiumNbTotalWorlds
				value = -1
			}
		}
	}
	if = {
		limit = {
			FROM = { 
				is_subject_of_type = integrated_world_subject_type
			}
		}
		1={
			change_variable = {
				which = ImperiumNbIntgratedWorlds
				value = -1
			}
			change_variable = {
				which = ImperiumNbTotalWorlds
				value = -1
			}
		}
	}
	if = {
		limit = {
			FROM = { 
				is_subject_of_type = astartes_subject_type
			}
		}
		1={
			change_variable = {
				which = ImperiumNbAstartes
				value = -1
			}
		}
	}
	if = {
		limit = {
			FROM = { 
				is_subject_of_type = autonomus_astartes_subject_type
			}
		}
		1={
			change_variable = {
				which = ImperiumNbIndAstartes
				value = -1
			}
		}
	}
}
# ROOT = New vassal, FROM = Overlord
on_create_vassal = {
	if = {
		limit = {
			ROOT = { 
				is_subject_of_type = nominal_imperial_world_subject_type
			}
		}
		1={
			change_variable = {
				which = ImperiumNbNominalWorlds
				value = 1
			}
			change_variable = {
				which = ImperiumNbTotalWorlds
				value = 1
			}
		}
	}
	if = {
		limit = {
			ROOT = { 
				is_subject_of_type = imperial_world_subject_type
			}
		}
		1={
			change_variable = {
				which = ImperiumNbWorlds
				value = 1
			}
			change_variable = {
				which = ImperiumNbTotalWorlds
				value = 1
			}
		}
	}
	if = {
		limit = {
			ROOT = { 
				is_subject_of_type = integrated_world_subject_type
			}
		}
		1={
			change_variable = {
				which = ImperiumNbIntgratedWorlds
				value = 1
			}
			change_variable = {
				which = ImperiumNbTotalWorlds
				value = 1
			}
		}
	}
	if = {
		limit = {
			ROOT = { 
				is_subject_of_type = astartes_subject_type
			}
		}
		1={
			change_variable = {
				which = ImperiumNbAstartes
				value = 1
			}
		}
	}
	if = {
		limit = {
			ROOT = { 
				is_subject_of_type = autonomus_astartes_subject_type
			}
		}
		1={
			change_variable = {
				which = ImperiumNbIndAstartes
				value = 1
			}
		}
	}
}
on_province_owner_change = { #
	if = {
		limit = {
			has_saved_global_event_target = adeptus_mechanicus_tag
			OR={
				FROM={
					tag = event_target:adeptus_mechanicus_tag
					is_subject_of = event_target:adeptus_mechanicus_tag
				}
				owner={
					tag = event_target:adeptus_mechanicus_tag
					is_subject_of = event_target:adeptus_mechanicus_tag
				}
			}	
		}
		event_target:adeptus_mechanicus_tag={
			if = {
				limit={
					has_100_forge_worlds_trigger = yes
				}
				set_country_flag = XXB_has_100_forge_worlds
			}
			else={
				clr_country_flag = XXB_has_100_forge_worlds
			}
			if = {
				limit={
					has_75_forge_worlds_trigger = yes
				}
				set_country_flag = XXB_has_75_forge_worlds
			}
			else={
				clr_country_flag = XXB_has_75_forge_worlds
			}
			if = {
				limit={
					has_50_forge_worlds_trigger = yes
				}
				set_country_flag = XXB_has_50_forge_worlds
			}
			else={
				clr_country_flag = XXB_has_50_forge_worlds
			}
			if = {
				limit={
					has_25_forge_worlds_trigger = yes
				}
				set_country_flag = XXB_has_25_forge_worlds
			}
			else={
				clr_country_flag = XXB_has_25_forge_worlds
			}
			if = {
				limit={
					has_10_forge_worlds_trigger = yes
				}
				set_country_flag = XXB_has_10_forge_worlds
			}
			else={
				clr_country_flag = XXB_has_10_forge_worlds
			}
			if = {
				limit={
					NOT={has_5_forge_worlds_trigger = yes}
				}
				set_country_flag = XXB_has_less_then_5_forge_worlds
			}
			else={
				clr_country_flag = XXB_has_less_then_5_forge_worlds
			}
		}
	}
}